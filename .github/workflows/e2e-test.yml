name: E2E Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  e2e-test:
    name: E2E Test - ${{ matrix.distro.test-name }}
    runs-on: windows-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        distro:
          - name: "Ubuntu 22.04 LTS"
            test-name: "ubuntu-2204-test"
          - name: "Debian"
            test-name: "debian-test"
          - name: "Ubuntu 24.04 LTS"
            test-name: "ubuntu-2404-test"
          - name: "Kali Linux"
            test-name: "kali-test"
          - name: "openSUSE Tumbleweed"
            test-name: "opensuse-tumbleweed-test"
          - name: "Oracle Linux 9.5"
            test-name: "oracle-9-test"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Setup WSL
        uses: Vampire/setup-wsl@v6
      
      - name: Build autowsl
        run: go build -o autowsl.exe .
      
      - name: Verify WSL
        run: wsl --status
        shell: pwsh
      
      - name: Install and provision
        shell: pwsh
        timeout-minutes: 30
        run: |
          .\autowsl.exe install "${{ matrix.distro.name }}" --name "${{ matrix.distro.test-name }}"
          .\autowsl.exe provision "${{ matrix.distro.test-name }}" --playbooks systemd
          
          # Restart WSL to activate systemd before provisioning SSH
          Write-Host "Restarting WSL to activate systemd..."
          wsl --terminate "${{ matrix.distro.test-name }}"
          Start-Sleep -Seconds 2
          
          .\autowsl.exe provision "${{ matrix.distro.test-name }}" --playbooks ssh --extra-vars ssh_port=2222
          .\autowsl.exe copy "${{ matrix.distro.test-name }}" --name "${{ matrix.distro.test-name }}-copy"
          
      - name: Verify install
        shell: pwsh
        run: |
          $name = "${{ matrix.distro.test-name }}"
          $copyName = "${{ matrix.distro.test-name }}-copy"
          $listOutput = ./autowsl.exe list
          if ($listOutput -match $name -and $listOutput -match $copyName) {
            Write-Host "✓ Distro '$name' and '$copyName' successfully verified in output."
          } else {
            Write-Host "--- Full 'autowsl list' output ---"
            Write-Host $listOutput
            Write-Host "------------------------------------"
            Write-Host "ERROR: Distro '$name' or '$copyName' was not found in the list!"
            exit 1
          }

      - name: Verify SSH and Systemd
        run: |
          $distro = "${{ matrix.distro.test-name }}"
          
          Write-Host "Verifying that systemd is PID 1 in $distro..."
          wsl -d $distro -- bash -c "ps -p 1 -o comm= | grep -q systemd"
          if ($LASTEXITCODE -ne 0) {
            Write-Host "ERROR: systemd is NOT running as PID 1! The WSL instance was likely not restarted."
            Write-Host "Actual PID 1 is:"
            wsl -d $distro -- ps -p 1 -o comm=
            exit 1
          }
          Write-Host "✓ OK: systemd is confirmed as PID 1."

          Write-Host "Verifying that SSH service is active and enabled via systemctl..."
          wsl -d $distro -- bash -c "systemctl is-active --quiet ssh || systemctl is-active --quiet sshd"
          if ($LASTEXITCODE -ne 0) {
            Write-Host "ERROR: SSH service is not 'active' according to systemctl!"
            wsl -d $distro -- systemctl status sshd || wsl -d $distro -- systemctl status ssh
            exit 1
          }
          Write-Host "✓ OK: SSH service is active."

          Write-Host "Verifying SSH port configuration..."
          wsl -d $distro -- grep "Port 2222" /etc/ssh/sshd_config
          if ($LASTEXITCODE -ne 0) {
            Write-Host "ERROR: Port 2222 was not found in /etc/ssh/sshd_config!"
            exit 1
          }
          Write-Host "✓ OK: SSH port is configured to 2222."
        shell: pwsh
      
      - name: Diagnostics on failure
        if: failure()
        shell: pwsh
        run: |
          wsl -l -v || $true
          wsl --status || $true
          Get-ChildItem -Recurse .autowsl_tmp 2>$null | Select-Object FullName,Length || $true
      - name: Cleanup
        if: always()
        shell: pwsh
        run: |
          wsl --unregister "${{ matrix.distro.test-name }}" 2>$null || $true
          wsl --unregister "${{ matrix.distro.test-name }}-copy" 2>$null || $true
