name: E2E Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  e2e-test:
    name: E2E Test - ${{ matrix.distro }}
    runs-on: windows-latest
    
    strategy:
      fail-fast: false
      matrix:
        distro:
          - name: "Ubuntu 22.04 LTS"
            test-name: "ubuntu-2204-test"
          - name: "Ubuntu 24.04 LTS"
            test-name: "ubuntu-2404-test"
          - name: "Debian"
            test-name: "debian-test"
          - name: "Kali Linux"
            test-name: "kali-test"
          - name: "openSUSE Tumbleweed"
            test-name: "opensuse-tumbleweed-test"
          - name: "Oracle Linux 9.5"
            test-name: "oracle-9-test"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Build autowsl
        run: go build -o autowsl.exe .
      
      - name: Setup WSL
        run: |
          wsl --set-default-version 2
          wsl --update
          Start-Sleep -Seconds 5
        shell: pwsh
      
      - name: Verify WSL
        run: wsl --status
        shell: pwsh
        continue-on-error: true
      
      - name: Install and provision
        run: .\autowsl.exe install "${{ matrix.distro.name }}" --name "${{ matrix.distro.test-name }}" --playbooks curl
        timeout-minutes: 30
        shell: pwsh
      
      - name: Verify install
        run: |
          if ((wsl -l -v) -notmatch "${{ matrix.distro.test-name }}") { exit 1 }
        shell: pwsh
      
      - name: Verify curl
        run: wsl -d "${{ matrix.distro.test-name }}" -- curl --version
        shell: pwsh
      
      - name: Test curl
        run: wsl -d "${{ matrix.distro.test-name }}" -- curl -s https://www.google.com
        shell: pwsh
      
      - name: Cleanup
        if: always()
        run: wsl --unregister "${{ matrix.distro.test-name }}"
        shell: pwsh
        continue-on-error: true
